import java.util.Scanner;

public class PrimsClass {
    final static int MAX = 20;
    static int n; 
    static int cost[][]; 
    static Scanner scan = new Scanner(System.in);

    public static void main(String[] args) {
        ReadMatrix();
        Prims();
    }

    static void ReadMatrix() {
        int i, j;
        cost = new int[MAX][MAX];
        System.out.println("\nEnter the number of nodes:");
        n = scan.nextInt();
        System.out.println("\nEnter the adjacency matrix:\n");
        for (i = 0; i < n; i++) {
            for (j = 0; j < n; j++) {
                cost[i][j] = scan.nextInt();
                if (cost[i][j] == 0 && i != j) {
                    cost[i][j] = 999;
                }
            }
        }
    }

    static void Prims() {
        int visited[] = new int[MAX];
        int ne = 0, i, j, min, a = -1, b = -1;
        int mincost = 0;

        visited[0] = 1;

        while (ne < n - 1) {
            min = 999;

            for (i = 0; i < n; i++) {
                if (visited[i] == 1) {
                    for (j = 0; j < n; j++) {
                        if (visited[j] == 0 && cost[i][j] < min) {
                            min = cost[i][j];
                            a = i;
                            b = j;
                        }
                    }
                }
            }

            if (a != -1 && b != -1) {
                System.out.println("Edge " + (ne + 1) + ": (" + (a + 1) + "," + (b + 1) + ") cost: " + min);
                mincost += min;
                visited[b] = 1;
                ne++;
            }

            cost[a][b] = cost[b][a] = 999; 
        }

        System.out.println("\nMinimum cost: " + mincost);
    }
}
